T02: Python Basics
=====

Why Use Python?
----------------

Python is a versatile high-level programming language. It is free, unlike MATLAB, and packages are open-source, which means that anybody can use and create Python tools. Python is ideal for manipulating data in dataframes, performing statistical analyses, and creating plots and graphs (including interactive ones). It is also very useful in machine learning and image analysis. Because of its intuitive and easy-to-read syntax, Python is a good language for programming beginners.

Python vs. R
----------------

Python and R are the languages of choice for data scientists. Many scientists use R for data cleaning and visualization because it has been optimized for statistical analysis and data visualization. Python, on the other hand, is a general-purpose language with more functionality and is easier to customize because of its clear syntax. I prefer to use Python and have therefore chosen to write this bootcamp in it. There will be some mentions of easy-to-use features in R, such as plotting phylogenetic trees and running linear models. 

Arithmetic and Object Types
----------------

Basic arithmetic can be easily performed in Python using the following operators:

.. list-table:: 
   :widths: 10, 5
   :header-rows: 0

   * - addition, +
   * - subtraction, -
   * - multiplication, *
   * - division, /
   * - exponentiation, **
   * - modulo, %
   
The operations follow standard order of operations, like in the rest of mathematics. For example:
   
.. testcode::

    >>> 2 + 3 * 4 - 5**2
    
.. testoutput::
   
Python objects have different types. The main types are integers, floats, lists, arrays, and strings. Floating point numbers are decimals. If you convert a float to an integer, it will be rounded:

>>> int(4.3)

Strings are sequences of characters, usually words. When added together, two strings are concatenated:

>>> 'Hello' + ' world'

The other operations can not be performed on strings because they don't make sense. We can see the type of an object using the `type` function. Functions are called with arguments (inputs) inside parentheses like so:

>>> type('hi!')

>>> type(15.8)

>>> type(10)

Lists and arrays are objects that store 
