T01: Command line basics and Anaconda
=====

The command line is an interface into which users type text to execute commands. Commands range in complexity from moving files to running publicly available software. Any function that you do using the graphical user interfaces (GUIs, pronounced "goo-wee"), like Finder on Mac or Windows File Explorer, can be done through the command line.  

For Mac users, the command line is an application called **Terminal**. On Windows, it is called the **command prompt**. In the first half of the tutorial, we will learn basic commands for navigating through directories and managing files via the command line. In the second half, we will go through installation of the software **Anaconda**, which provides an interface to use Python and R and manage data science packages.


Navigating through directories
----------------

Directory is a fancy name for a folder. Subdirectories are subfolders. Using the command line, you can easily move through folders on your machine using **paths**, which are like addresses for every file. For example, if I have a file called "test.py" in a folder called "Computing" on my desktop, then its file path is ``/users/skulkarni/Desktop/Computing.test.py``. Forward (not backward) slashes are used to separate levels of directories.

.. code-block:: console

   (base) $ pwd                     # Print Working (current) Directory
   (base) $ cd Desktop/Computing    # change Current Directory to Desktop/Computing
   (base) $ ls                      # print all files in the current directory
   (base) $ mv <file_1> <file_2>    # move file_1 to file_2. This also renames files
   (base) $ mkdir <new_dir>         # create new directory called new_dir

Creating recipes
----------------

To retrieve a list of random ingredients,
you can use the ``lumache.get_random_ingredients()`` function:

.. autofunction:: lumache.get_random_ingredients

The ``kind`` parameter should be either ``"meat"``, ``"fish"``,
or ``"veggies"``. Otherwise, :py:func:`lumache.get_random_ingredients`
will raise an exception.

.. autoexception:: lumache.InvalidKindError

For example:

>>> import lumache
>>> lumache.get_random_ingredients()
['shells', 'gorgonzola', 'parsley']

